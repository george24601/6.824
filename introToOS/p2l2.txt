regs and stack are per thread, code data and files, address space, and exeuction context  are per processo
more complex process control block with part both shared between threads, and per-thread exec context
=> part of reasion context switch thread time < context switch process time

inter process communication => more expensive than within same process

OS will prevent same physical address mapped to different processes , not so much with threads,i.e., shared in memory

thread data structure: ID, PC, SP, registers, stack, other attributes

Mutex: locked?, list of blocked thread, current owner

CV: list of waiting threads, mutex ref

boss-woker, pipeline, and layered patterns

